x-base: &base
  restart: unless-stopped

x-networks: &networks
  networks:
    - default

volumes:
  local_data:
    driver: local
    driver_opts:
      type: none
      device: ./data
      o: bind

x-volumes: &volumes
  volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/hosts:/etc/hosts
    - local_data:/app/data

services:
  jupyter:
    <<: [*base, *volumes, *networks]
    build:
      context: .
      dockerfile: docker/jupyter/dockerfile
      args:
        BASE_IMAGE: ${RUNNER_IMAGE}
        JUPYTER_TOKEN: ${JUPYTER_TOKEN}
    image: ${JUPYTER_IMAGE_NAME}_${VERSION}
    container_name: ${JUPYTER_CONTAINER_NAME}_${VERSION}
    restart: unless-stopped
    environment:
      MODE: service
    ports:
      - "$JUPYTER_EXPOSE_PORT:80"
    depends_on:
      - sandbox

  sandbox:
    <<: [*base, *volumes, *networks]
    build:
      context: .
      dockerfile: docker/sandbox/dockerfile
      args:
        BASE_IMAGE: ${BASE_IMAGE}
        RUNNER_IMAGE: ${RUNNER_IMAGE}
    image: ${SANDBOX_IMAGE_NAME}_${VERSION}
    container_name: ${SANDBOX_CONTAINER_NAME}_${VERSION}
    ports:
      - "${WEB_START_PORT}:80"
      - "${SANDBOX_START_PORT}:8194"
    environment:
      - API_KEY=${SANDBOX_API_KEY:-dify-sandbox}
      - GIN_MODE=${SANDBOX_GIN_MODE:-release}
      - WORKER_TIMEOUT=${SANDBOX_WORKER_TIMEOUT:-15}
      - ENABLE_NETWORK=${SANDBOX_ENABLE_NETWORK:-true}
      - HTTP_PROXY=${SANDBOX_HTTP_PROXY:-http://ssrf_proxy:3128}
      - HTTPS_PROXY=${SANDBOX_HTTPS_PROXY:-http://ssrf_proxy:3128}
      - SANDBOX_PORT=${SANDBOX_PORT:-8194}
